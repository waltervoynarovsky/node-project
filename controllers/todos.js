import { readFileSync, writeFileSync, appendFileSync } from "fs";
import { Op } from "sequelize";
import { Student } from "../models/student.js";

let students = JSON.parse(readFileSync("./data/students.json"));

//CREATE
export const addStudents = async (req, res) => {
  try {
    // TRY AND CREATE A NEW STUDENT
    const student = await Student.create(req.body);
    // RETURN THE AUTOGENERATED IT FROM THE DB
    res.status(201).send({ data: `Student ID: ${student.id} created` });
  } catch (error) {
    // IF THERE IS AN ERROR WE WILL SEND BACK THE MESSAGE
    res.status(403).send(error.message);
  }
};
export const getStudents = async (req, res) => {
  // COMEBACK TO USING query
  const { name, house } = req.query;

  const query = { where: {} };
  // "%name%""
  if (name) {
    query.where.first_name = { [Op.like]: `%${name}%` };
  }

  if (house) {
    query.where.house = { [Op.eq]: house };
  }

  try {
    const students = await Student.findAll(query);
    res.send(students);
  } catch (error) {
    res.stauts(404).send(error.message);
  }
};

export const getStudentsById = async (req, res) => {
  const id = parseInt(req.params.id);
  try {
    const student = await Student.findByPk(id);
    if (student === null) {
      throw new Error("Student not found!");
    }
    res.send(student);
  } catch (error) {
    res.status(404).send(error.message);
  }
};

export const updateStudentsById = async (req, res) => {
  const id = parseInt(req.params.id);

  try {
    const student = await Student.update(req.body, {
      where: {
        id: id,
      },
    });
    // [1] IF FOUND -> 1 ROW AFFECTED
    // [0] IF NOT FOUND -> 0 ROW AFFECTED

    if (student[0] === 0) {
      throw new Error("Student not found");
    }
    res.send("Student updated");
  } catch (error) {
    res.status(404).send(error.message);
  }
};

export const deleteStudentById = async (req, res) => {
  const id = parseInt(req.params.id);

  try {
    const student = await Student.destroy({
      where: {
        id: id,
      },
    });
    if (!student) {
      throw new Error("Student not found");
    }
    res.status(204).send();
  } catch (error) {
    res.status(404).send(error.message);
  }
};
